<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스는 풀클래스명을 써야한다 와 DTO 타입을 변경한 후 마이바티스 config 설정파일에 매퍼 부분은 지워주고, spring-context.xml에 매퍼 스캐닝을 추가해야 한다. -->
<mapper namespace="com.multi.toonGather.recruit.model.mapper.JobMapper">
	<resultMap id="memberResultMap" type="userDTO">
		<result property="userNo" column="user_no"/>
		<result property="nickname" column="nickname"/>
	</resultMap>

	<resultMap id="JobResultMap" type="jobDTO">
		<id property="board_no" column="board_no" />
		<result property="writer" column="writer" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="location" column="location" />
		<result property="img" column="img" />
		<result property="contact" column="contact" />
		<result property="created_date" column="created_date" />
		<result property="modified_date" column="modified_date" />
		<result property="dead_line" column="dead_line" typeHandler="com.multi.toonGather.config.LocalDateTypeHandler" />
		<association property="member" column="writer" javaType="userDTO" resultMap="memberResultMap" />
	</resultMap>

	<resultMap id="ApplyResultMap" type="applyDTO">
		<id property="apply_no" column="board_no" />
		<result property="board_no" column="board_no" />
		<result property="writer" column="writer" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="img" column="img" />
		<result property="contact" column="contact" />
		<result property="created_date" column="created_date" />
		<association property="member" column="writer" javaType="userDTO" resultMap="memberResultMap" />
	</resultMap>

	<select id="selectAll" parameterType="pageDTO" resultMap="JobResultMap">
		SELECT
			b.*
			, m.user_no
			, m.nickname
		FROM rct_job b
		JOIN users m ON b.writer = m.user_no
		<if test="page != null">
			ORDER BY b.board_no DESC
			LIMIT #{start}, 10
		</if>
	</select>


	<insert id="insertBoard" parameterType="jobDTO">
		INSERT INTO rct_job
		(
		writer
		, title
		, content
		, location
		, img
		, contact
		, dead_line
		)
		VALUES
		(
		#{ member.userNo }
		, #{ title }
		, #{ content }
		, #{ location }
		, #{ img }
		, #{ contact }
		, #{ dead_line }
		)
	</insert>

	<select id="selectBoard" parameterType="int" resultMap="JobResultMap">
		SELECT
		b.*
		, m.user_no
		, m.nickname
		FROM rct_job b
		JOIN users m ON b.writer = m.user_no
		WHERE b.board_no = #{no}
	</select>

	<insert id="insertApply" parameterType="applyDTO">
		INSERT INTO rct_job_apply
		(
		board_no
		, writer
		, title
		, content
		, img
		, contact
		)
		VALUES
		(
		#{ board_no }
		, #{ writer }
		, #{ title }
		, #{ content }
		, #{ img }
		, #{ contact }
		)
	</insert>

	<select id="selectApply" parameterType="int" resultMap="ApplyResultMap">
		SELECT
		b.*
		, m.user_no
		, m.nickname
		FROM rct_job_apply b
		JOIN users m ON b.writer = m.user_no
		WHERE b.apply_no = #{no}
	</select>

	<select id="selectOpenAll" parameterType="pageDTO" resultMap="JobResultMap">
		SELECT
		b.*
		, m.user_no
		, m.nickname
		FROM rct_job b
		JOIN users m ON b.writer = m.user_no
		WHERE b.dead_line IS NULL OR b.dead_line >= CURDATE()
		<if test="page != null">
			ORDER BY b.board_no DESC
			LIMIT #{start}, 10
		</if>
	</select>

</mapper>