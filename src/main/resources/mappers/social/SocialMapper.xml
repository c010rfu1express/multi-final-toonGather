<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.toonGather.social.model.mapper.SocialMapper">

    <resultMap id="reviewResultMap" type="reviewDTO">
        <id property="reviewNo" column="review_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="starRating" column="star_rating"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="viewCnt" column="view_cnt"/>
        <association property="writer" javaType="userDTO">
            <id property="userNo" column="user_no"/>
            <result property="userId" column="user_id"/>
            <result property="nickname" column="nickname"/>
            <result property="profileImagePath" column="profile_image_path"/>
        </association>
        <association property="webtoon" javaType="com.multi.toonGather.webtoon.model.dto.WebtoonDTO">
            <id property="webtoon_no" column="webtoon_no"/>
            <result property="webtoon_name" column="webtoon_name"/>
            <result property="author" column="author"/>
            <result property="thumbnail_url" column="thumbnail_url"/>
        </association>
    </resultMap>

    <resultMap id="diaryResultMap" type="diaryDTO">
        <id property="diaryNo" column="diary_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="statusCode" column="status_code"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="viewCnt" column="view_cnt"/>
        <association property="writer" javaType="userDTO">
            <id property="userNo" column="user_no"/>
            <result property="userId" column="user_id"/>
            <result property="nickname" column="nickname"/>
            <result property="profileImagePath" column="profile_image_path"/>
        </association>
        <association property="webtoon" javaType="com.multi.toonGather.webtoon.model.dto.WebtoonDTO">
            <id property="webtoon_no" column="webtoon_no"/>
            <result property="webtoon_name" column="webtoon_name"/>
            <result property="author" column="author"/>
            <result property="thumbnail_url" column="thumbnail_url"/>
        </association>
    </resultMap>

    <!-- 인기 리뷰 -->
    <select id="selectPopularReviews" resultMap="reviewResultMap">
    </select>

    <!-- 사용자 정보 조회 -->
    <select id="selectUserProfile" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users WHERE user_id = #{userId}
    </select>

    <!-- 사용자별 리뷰 목록 조회 -->
    <select id="selectReviewsByUserId" parameterType="map" resultMap="reviewResultMap">
        SELECT r.*, u.user_no, u.user_id, u.nickname, u.profile_image_path,
        w.webtoon_no, w.webtoon_name, w.author, w.thumbnail_url
        FROM so_review r
        JOIN users u ON r.writer_no = u.user_no
        JOIN webtoon w ON r.webtoon_no = w.webtoon_no
        WHERE u.user_id = #{userId}
        ORDER BY r.created_date DESC
        LIMIT #{pageDTO.start}, 10
    </select>

    <!-- 사용자별 리뷰 개수 조회 -->
    <select id="selectReviewCountByUserId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM so_review r
        JOIN users u ON r.writer_no = u.user_no
        WHERE u.user_id = #{userId}
    </select>

    <!-- 리뷰 상세 조회 -->
    <select id="selectReviewByNo" resultMap="reviewResultMap">
        SELECT r.*, u.user_no, u.user_id, u.nickname, u.profile_image_path,
        w.webtoon_no, w.webtoon_name, w.author, w.thumbnail_url
        FROM so_review r
        JOIN users u ON r.writer_no = u.user_no
        JOIN webtoon w ON r.webtoon_no = w.webtoon_no
        WHERE r.review_no = #{reviewNo}
    </select>
    <!-- 리뷰 상세 조회: 조회수 증가 -->
    <update id="incrementReviewViewCount">
        UPDATE so_review
        SET view_cnt = view_cnt + 1
        WHERE review_no = #{reviewNo}
    </update>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="reviewDTO">
        UPDATE so_review
        SET title = #{title},
        content = #{content},
        star_rating = #{starRating},
        modified_date = NOW()
        WHERE review_no = #{reviewNo}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM so_review
        WHERE review_no = #{reviewNo}
    </delete>

    <!-- 리뷰/다이어리 작성 웹툰 정보 -->
    <select id="selectWebtoonByNo" resultType="com.multi.toonGather.webtoon.model.dto.WebtoonDTO">
        SELECT * FROM webtoon WHERE webtoon_no = #{webtoonNo}
    </select>

    <!-- 리뷰 작성 -->
    <insert id="createReview" parameterType="reviewDTO" useGeneratedKeys="true" keyProperty="reviewNo">
        INSERT INTO so_review (writer_no, webtoon_no, title, content, star_rating)
        VALUES (#{writer.userNo}, #{webtoon.webtoon_no}, #{title}, #{content}, #{starRating})
    </insert>

    <!-- 다이어리 작성 -->
    <insert id="createDiary" parameterType="diaryDTO" useGeneratedKeys="true" keyProperty="diaryNo">
        INSERT INTO so_diary (writer_no, webtoon_no, title, content, status_code)
        VALUES (#{writer.userNo}, #{webtoon.webtoon_no}, #{title}, #{content}, #{statusCode})
    </insert>

    <!-- 사용자별 다이어리 목록 조회 -->
    <select id="selectDiariesByUserId" parameterType="map" resultMap="diaryResultMap">
        SELECT d.*, u.user_no, u.user_id, u.nickname, u.profile_image_path,
        w.webtoon_no, w.webtoon_name, w.author, w.thumbnail_url
        FROM so_diary d
        JOIN users u ON d.writer_no = u.user_no
        JOIN webtoon w ON d.webtoon_no = w.webtoon_no
        WHERE u.user_id = #{userId}
        ORDER BY d.created_date DESC
        LIMIT #{pageDTO.start}, 10
    </select>

    <!-- 사용자별 다이어리 개수 조회 -->
    <select id="selectDiaryCountByUserId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM so_diary d
        JOIN users u ON d.writer_no = u.user_no
        WHERE u.user_id = #{userId}
    </select>

    <!-- 다이어리 상세 조회 -->
    <select id="selectDiaryByNo" resultMap="diaryResultMap">
        SELECT d.*, u.user_no, u.user_id, u.nickname, u.profile_image_path,
        w.webtoon_no, w.webtoon_name, w.author, w.thumbnail_url
        FROM so_diary d
        JOIN users u ON d.writer_no = u.user_no
        JOIN webtoon w ON d.webtoon_no = w.webtoon_no
        WHERE d.diary_no = #{diaryNo}
    </select>
    <!-- 다이어리 상세 조회: 조회수 증가 -->
    <update id="incrementDiaryViewCount">
        UPDATE so_diary
        SET view_cnt = view_cnt + 1
        WHERE diary_no = #{diaryNo}
    </update>

    <!-- 다이어리 수정 -->
    <update id="updateDiary" parameterType="diaryDTO">
        UPDATE so_diary
        SET title = #{title},
        content = #{content},
        status_code = #{statusCode},
        modified_date = NOW()
        WHERE diary_no = #{diaryNo}
    </update>

    <!-- 다이어리 삭제 -->
    <delete id="deleteDiary" parameterType="int">
        DELETE FROM so_diary
        WHERE diary_no = #{diaryNo}
    </delete>
</mapper>
