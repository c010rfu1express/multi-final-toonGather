<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.multi.toonGather.social.model.mapper.SocialMapper">

    <!-- 리뷰 작성 -->
    <insert id="createReview" parameterType="reviewDTO">
        INSERT INTO so_review (webtoon_no, writer_no, title, content, star_rating)
        SELECT w.webtoon_no, u.user_no, #{title}, #{content}, #{starRating}
        FROM users u, webtoon w
        WHERE u.user_no = #{writer.userNo}
        AND w.webtoon_no = #{webtoon.webtoon_no}
    </insert>

    <!-- 사용자별 리뷰 목록 조회 -->
    <select id="getReviewsByUser" resultMap="reviewResultMap" parameterType="int">
        SELECT r.review_no, r.webtoon_no, r.title, r.content, r.star_rating,
        r.created_date, r.modified_date, r.view_cnt,
        u.user_no, u.nickname, u.profile_image_path,
        w.webtoon_name, w.author
        FROM so_review r
        JOIN users u ON r.writer_no = u.user_no
        JOIN webtoon w ON r.webtoon_no = w.webtoon_no
        WHERE r.writer_no = #{userNo}
        ORDER BY r.created_date DESC
    </select>

    <!-- 리뷰 상세 조회 -->
    <select id="getReviewByNo" resultMap="reviewResultMap" parameterType="int">
        SELECT r.review_no, r.webtoon_no, r.title, r.content, r.star_rating,
        r.created_date, r.modified_date, r.view_cnt,
        u.user_no, u.nickname, u.profile_image_path,
        w.webtoon_name, w.author
        FROM so_review r
        JOIN users u ON r.writer_no = u.user_no
        JOIN webtoon w ON r.webtoon_no = w.webtoon_no
        WHERE r.review_no = #{reviewNo}
    </select>

    <!-- 리뷰 상세 조회: 조회수 증가 -->
    <update id="incrementViewCount" parameterType="int">
        UPDATE so_review
        SET view_cnt = view_cnt + 1
        WHERE review_no = #{reviewNo}
    </update>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="reviewDTO">
        UPDATE so_review
        SET title = #{title},
        content = #{content},
        star_rating = #{starRating},
        modified_date = NOW()
        WHERE review_no = #{reviewNo}
    </update>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM so_review
        WHERE review_no = #{reviewNo}
    </delete>

    <!-- 다이어리 작성 -->
    <insert id="createDiary" parameterType="diaryDTO">
        INSERT INTO so_diary (webtoon_no, writer_no, title, content, status_code)
        SELECT w.webtoon_no, u.user_no, #{title}, #{content}, #{statusCode}
        FROM users u, webtoon w
        WHERE u.user_no = #{writer.userNo}
        AND w.webtoon_no = #{webtoon.webtoon_no}
    </insert>

    <!-- 사용자별 다이어리 목록 조회 -->
    <select id="getDiariesByUser" resultMap="diaryResultMap" parameterType="int">
        SELECT d.diary_no, d.webtoon_no, d.title, d.content, d.status_code,
        d.created_date, d.modified_date, d.view_cnt,
        u.user_no, u.nickname, u.profile_image_path,
        w.webtoon_name, w.author
        FROM so_diary d
        JOIN users u ON d.writer_no = u.user_no
        JOIN webtoon w ON d.webtoon_no = w.webtoon_no
        WHERE d.writer_no = #{userNo}
        ORDER BY d.created_date DESC
    </select>

    <!-- 다이어리 상세 조회 -->
    <select id="getDiaryByNo" resultMap="diaryResultMap" parameterType="int">
        SELECT d.diary_no, d.webtoon_no, d.title, d.content, d.status_code,
        d.created_date, d.modified_date, d.view_cnt,
        u.user_no, u.nickname, u.profile_image_path,
        w.webtoon_name, w.author
        FROM so_diary d
        JOIN users u ON d.writer_no = u.user_no
        JOIN webtoon w ON d.webtoon_no = w.webtoon_no
        WHERE d.diary_no = #{diaryNo}
    </select>

    <!-- 다이어리 상세 조회: 조회수 증가 -->
    <update id="incrementDiaryViewCount" parameterType="int">
        UPDATE so_diary
        SET view_cnt = view_cnt + 1
        WHERE diary_no = #{diaryNo}
    </update>

    <!-- 다이어리 수정 -->
    <update id="updateDiary" parameterType="diaryDTO">
        UPDATE so_diary
        SET title = #{title},
        content = #{content},
        status_code = #{statusCode},
        modified_date = NOW()
        WHERE diary_no = #{diaryNo}
    </update>

    <!-- 다이어리 삭제 -->
    <delete id="deleteDiary" parameterType="int">
        DELETE FROM so_diary
        WHERE diary_no = #{diaryNo}
    </delete>

    <!-- ResultMap 정의:  reviewDTO-->
    <resultMap id="reviewResultMap" type="reviewDTO">
        <id property="reviewNo" column="review_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="starRating" column="star_rating"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="viewCnt" column="view_cnt"/>
        <association property="writer" javaType="userDTO">
            <id property="userNo" column="user_no"/>
            <result property="nickname" column="nickname"/>
            <result property="profileImagePath" column="profile_image_path"/>
        </association>
        <association property="webtoon" javaType="com.multi.toonGather.webtoon.model.WebtoonDTO"><!--MybatisConfig Type Aliases 설정시 수정 예정-->
            <id property="webtoon_no" column="webtoon_no"/>
            <result property="webtoon_name" column="webtoon_name"/>
            <result property="author" column="author"/>
        </association>
    </resultMap>

    <!-- ResultMap 정의:  diaryDTO-->
    <resultMap id="diaryResultMap" type="diaryDTO">
        <id property="diaryNo" column="diary_no"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="statusCode" column="status_code"/>
        <result property="createdDate" column="created_date"/>
        <result property="modifiedDate" column="modified_date"/>
        <result property="viewCnt" column="view_cnt"/>
        <association property="writer" javaType="userDTO">
            <id property="userNo" column="user_no"/>
            <result property="nickname" column="nickname"/>
            <result property="profileImagePath" column="profile_image_path"/>
        </association>
        <association property="webtoon" javaType="com.multi.toonGather.webtoon.model.WebtoonDTO">
            <id property="webtoon_no" column="webtoon_no"/>
            <result property="webtoon_name" column="webtoon_name"/>
            <result property="author" column="author"/>
        </association>
    </resultMap>
</mapper>
