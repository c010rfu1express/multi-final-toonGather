<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--관련파일 (1) MybatisConfig.java -->
<!--관련파일 (2) resources/mappers/user/UserMapper.xml (현재파일)-->
<!--관련파일 (3) user/model/mapper/UserMapper.java-->
<!-- -->

<!--(A) mapper namespace: 관련파일 (3) Interface-->
<mapper namespace="com.multi.toonGather.user.model.mapper.UserMapper">
    <!--(B) resultMap type: 관련파일 (1) 업뎃하면 아래 type="userDTO" 로 바꿔주기-->
    <!--(C) resultMap id: 왜있는걸까-->
    <resultMap type="userDTO" id="userResultMap">
        <!-- 언더바가 들어가는 쿼리문에 한하여 매핑을 해줘야함 -->
        <!-- property: DTO에 있는 그대로, column: MySQL에 있는 그대로-->
        <id property="userNo" column="user_no"/>
        <result property="typeCode" column="type_code"/>
        <result property="authCode" column="auth_code"/>
        <result property="userId" column="user_id"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="contactNumber" column="contact_number"/>
        <result property="email" column="email"/>
        <result property="profileImagePath" column="profile_image_path"/>
        <result property="bio" column="bio"/>

        <result property="gender" column="gender"/>
        <result property="dateOfBirth" column="date_of_birth"/>
        <result property="realName" column="real_name"/>
        <result property="termsAgreement" column="terms_agreement"/>
        <result property="termsAgreementDatetime" column="terms_agreement_datetime"/>
        <result property="registrationDatetime" column="registration_datetime"/>
        <result property="lastModifiedDatetime" column="last_modified_datetime"/>
    </resultMap>
    <!--(D) 관련파일 (3) UserMapper.java, 그리고 이것이 결국 UserServiceImpl.java에 이용됨-->
    <select id="selectOneByUserId" parameterType="string" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        WHERE user_id = #{userId}
    </select>

    <select id="selectOneByNickname" parameterType="string" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        WHERE nickname = #{nickname}
    </select>

    <select id="selectOneByEmail" parameterType="string" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        WHERE email = #{email}
    </select>

    <insert id="insertUser">
        INSERT INTO users (
        type_code,
        auth_code,
        user_id,
        password,
        nickname,
        contact_number,
        email,
        profile_image_path,
        bio,

        gender,
        date_of_birth,
        real_name,
        terms_agreement,
        terms_agreement_datetime,
        registration_datetime,
        last_modified_datetime
        )

        VALUES (
        #{typeCode},
        'B',
        #{userId},
        #{password},
        #{nickname},
        #{contactNumber},
        #{email},
        #{profileImagePath},
        #{bio},

        #{gender},
        #{dateOfBirth},
        #{realName},
        #{termsAgreement},
        NOW(),
        NOW(),
        NOW()
        )
    </insert>

    <select id="selectOneByContactNumber" parameterType="string" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        WHERE contact_number = #{contactNumber}
    </select>

    <select id="selectOneByUserIdAndEmail" parameterType="map" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        WHERE user_id = #{userId} AND email = #{email}
    </select>

    <select id="selectOneByUserNo" parameterType="string" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        password,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        WHERE user_no = #{userNo}
    </select>

    <update id="updateUser" parameterType="map">
        UPDATE users
        SET
            <if test="userDTO.authCode != '\0'">
                auth_code = #{userDTO.authCode},
            </if>
            <if test="userDTO.password != null and userDTO.password != ''">
                password = #{userDTO.password},
            </if>
            nickname = #{userDTO.nickname},
            contact_number = #{userDTO.contactNumber},
            email = #{userDTO.email},
            <if test="userDTO.profileImagePath != null and userDTO.profileImagePath != ''">
                profile_image_path = #{userDTO.profileImagePath},
            </if>
            bio = #{userDTO.bio},
            gender = #{userDTO.gender},
            date_of_birth = #{userDTO.dateOfBirth},
            real_name = #{userDTO.realName},
            last_modified_datetime = NOW()
        WHERE user_no = #{userNo}
    </update>

    <delete id="deleteUser" parameterType="int">
        DELETE FROM users
        WHERE user_no = #{userNo}
    </delete>

    <select id="selectList" parameterType="pageDTO" resultType="userDTO">
        SELECT
        user_no AS userNo,
        type_code AS typeCode,
        auth_code AS authCode,
        user_id AS userId,
        nickname,
        contact_number AS contactNumber,
        email,
        profile_image_path AS profileImagePath,
        bio,
        gender,
        date_of_birth AS dateOfBirth,
        real_name AS realName,
        terms_agreement AS termsAgreement,
        terms_agreement_datetime AS termsAgreementDatetime,
        registration_datetime AS registrationDatetime,
        last_modified_datetime AS lastModifiedDatetime
        FROM users
        <if test="page != null">
            ORDER BY user_no DESC
            LIMIT #{start}, 10
        </if>
    </select>

</mapper>